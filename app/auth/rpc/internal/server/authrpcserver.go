// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"app/auth/rpc/internal/logic"
	"app/auth/rpc/internal/svc"
	"app/auth/rpc/pb"
)

type AuthRPCServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedAuthRPCServer
}

func NewAuthRPCServer(svcCtx *svc.ServiceContext) *AuthRPCServer {
	return &AuthRPCServer{
		svcCtx: svcCtx,
	}
}

//func (s *AuthRPCServer) UpdateAuthByRoleID(ctx context.Context, in *pb.UpdateAuthByRoleIDReq) (*pb.Resp, error) {
//	l := logic.NewUpdateAuthByRoleIDLogic(ctx, s.svcCtx)
//	return l.UpdateAuthByRoleID(in)
//}
//
//func (s *AuthRPCServer) UpdateAllAuth(ctx context.Context, in *pb.Empty) (*pb.Resp, error) {
//	l := logic.NewUpdateAllAuthLogic(ctx, s.svcCtx)
//	return l.UpdateAllAuth(in)
//}

func (s *AuthRPCServer) CheckAuth(ctx context.Context, in *pb.CheckAuthReq) (*pb.Resp, error) {
	l := logic.NewCheckAuthLogic(ctx, s.svcCtx)
	return l.CheckAuth(in)
}
